<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jaxrs="http://cxf.apache.org/jaxrs"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://cxf.apache.org/jaxrs
http://cxf.apache.org/schemas/jaxrs.xsd">

  <import resource="classpath:META-INF/cxf/cxf.xml" />
  <import resource="classpath*:activemq-client.xml" />

  <context:property-placeholder/>
  <context:annotation-config/>
  <bean class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer"/>
  <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer"/>

    <bean id="appMainThreadPoolExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize"  value="100" />
        <property name="keepAliveSeconds" value="60" />
        <property name="threadNamePrefix" value="amq-bridge-executor" />
    </bean>
    
    <!--<bean id="spiritedAwayConsumerListener"-->
          <!--class="com.amlinv.activemq.nw_ctlr.impl.ActiveMQConsumerAdvisoryEventSource">-->

        <!--<constructor-arg ref="spiritedAwayPooledConnectionFactory" />-->
        <!--<constructor-arg value="SpiritedAway" />-->
        <!--<constructor-arg ref="appMainThreadPoolExecutor" />-->
    <!--</bean>-->

    <bean id="brokerRegistry" class="com.amlinv.activemq.registry.impl.DefaultBrokerRegistry">
        <constructor-arg>
            <list>
                <bean class="com.amlinv.activemq.registry.model.BrokerInfo">
                    <constructor-arg value="SpiritedAway" />
                    <constructor-arg value="SpiritedAway" />
                    <constructor-arg value="failover://(tcp://localhost:61616)" />
                </bean>
                <bean class="com.amlinv.activemq.registry.model.BrokerInfo">
                    <constructor-arg value="TopGun" />
                    <constructor-arg value="TopGun" />
                    <constructor-arg value="failover://(tcp://localhost:61617)" />
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="queueRegistry" class="com.amlinv.activemq.registry.DestinationRegistry">
        <property name="listeners">
            <list value-type="com.amlinv.server.util.RegistryListener">
                <value>#{websocketBrokerStatsFeed.queueRegistryListener}</value>
            </list>
        </property>
    </bean>

    <!--<bean id="queueRegistry" class="com.amlinv.activemq.registry.impl.DefaultDestinationRegistry" />-->
    <!--<bean id="topicRegistry" class="com.amlinv.activemq.registry.impl.DefaultDestinationRegistry" />-->

    <bean id="amqBridgeController" class="com.amlinv.activemq.bridge.ctlr.AmqBridgeController" init-method="start" />

    <!--<bean id="rubyNetworkController" class="com.amlinv.activemq.nw_ctlr.ruby.RubyNetworkController" init-method="start">-->
        <!--<constructor-arg ref="amqBridgeController" />-->
        <!--<constructor-arg>-->
            <!--<list>-->
                <!--<ref bean="spiritedAwayConsumerListener" />-->
            <!--</list>-->
        <!--</constructor-arg>-->
        <!--<constructor-arg ref="brokerRegistry" />-->
        <!--<constructor-arg ref="queueRegistry" />-->
        <!--<constructor-arg ref="topicRegistry" />-->
    <!--</bean>-->

    <!-- Registry of managed Services -->
    <bean id="serviceRegistry" class="com.amlinv.server.util.ConcurrentRegistry" />
    <bean id="executionRegistry" class="com.amlinv.server.util.ConcurrentRegistry" />
    <bean id="serviceManager" class="com.amlinv.server_ctl.sapphire.SapphireServiceManager">
        <constructor-arg ref="serviceRegistry" />
        <constructor-arg ref="executionRegistry" />
    </bean>


    <bean id="monitorWebController" class="com.amlinv.activemq.monitor.web.MonitorWebController">
        <property name="websocketBrokerStatsFeed" ref="websocketBrokerStatsFeed" />
        <property name="queueRegistry" ref="queueRegistry" />
    </bean>
    <bean id="bridgeWebController" class="com.amlinv.activemq.bridge.web.BridgeWebController">
        <constructor-arg ref="amqBridgeController"/>
    </bean>

    <jaxrs:server id="services" address="/">
        <jaxrs:serviceBeans>

            <ref bean="monitorWebController" />
            <ref bean="bridgeWebController" />

            <bean class="com.amlinv.server_ctl.web.ServiceWebManager">
                <property name="threadPoolExecutor" ref="appMainThreadPoolExecutor" />
                <!--<property name="serviceRegistry" ref="serviceRegistry" />-->
                <property name="serviceManager" ref="serviceManager" />
            </bean>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
        </jaxrs:providers>
    </jaxrs:server>

    <!-- MONITORING WEBSOCKET -->
    <bean id="monitorWebsocketRegistry" class="com.amlinv.activemq.monitor.web.MonitorWebsocketRegistry" />
    <bean id="websocketBrokerStatsFeed" class="com.amlinv.activemq.monitor.web.MonitorWebsocketBrokerStatsFeed">
        <property name="websocketRegistry" ref="monitorWebsocketRegistry" />
    </bean>

    <!-- CLASS STATIC FIELD INJECTORS -->
    <bean class="com.amlinv.activemq.monitor.web.MonitorWebsocketStaticInjector">
        <property name="registry" ref="monitorWebsocketRegistry" />
    </bean>
</beans>
